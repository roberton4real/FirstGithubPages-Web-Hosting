recoveryservicesresources
| where type in~ (
    'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems'
)
| extend policy = properties.policyInfo.policyId
| extend vaultName = case(
    type in~ (
        'microsoft.dataprotection/backupVaults/backupInstances',
        'microsoft.dataprotection/backupVaults/deletedBackupInstances'
    ), split(split(id, '/Microsoft.DataProtection/backupVaults/')[1], '/')[0],
    type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',
    split(split(id, '/Microsoft.RecoveryServices/vaults/')[1], '/')[0], '--')
| extend vaultId = case(
    type in~ (
        'microsoft.dataprotection/backupVaults/backupInstances',
        'microsoft.dataprotection/backupVaults/deletedBackupInstances'),
    tolower(split(id, '/backupInstances/')[0]),
    type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',
    tolower(split(id, '/backupFabrics/')[0]), '--')
| extend dataSourceType = case(
    type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',
    strcat(properties.backupManagementType,'/',properties.workloadType),
    type in~ (
        'microsoft.dataprotection/backupVaults/backupInstances',
        'microsoft.dataprotection/backupVaults/deletedBackupInstances'
    ), properties.dataSourceInfo.datasourceType, '--')
| extend friendlyName = properties.friendlyName
| extend dsResourceGroup = split(split(properties.dataSourceInfo.resourceID, '/resourceGroups/')[1],'/')[0]
| extend dsSubscription = split(split(properties.dataSourceInfo.resourceID, '/subscriptions/')[1],'/')[0]
| extend resourceId = tolower(tostring(properties.dataSourceSetInfo.resourceID))
| extend lastRestorePoint = case(isnull(properties.lastRecoveryPoint), properties.lastBackupTime, properties.lastRecoveryPoint)
| extend primaryLocation = properties.dataSourceInfo.resourceLocation
| extend parentType = properties.parentType
| extend instanceName = case(isnotnull(properties.serverName), strcat(properties.serverName,'/', properties.parentName), 'NA')
| extend policyName = case(
    type in~ (
        'microsoft.dataprotection/backupVaults/backupInstances',
        'microsoft.dataprotection/backupVaults/deletedBackupInstances'
    ),  extract(@'([^/]*)/backupPolicies/([^/]*)', 2, tostring(policy)),
    type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',
    properties.policyInfo.name, '--')
| extend protectionState = properties.currentProtectionState
| extend managedIdentity = case((properties.identityDetails.useSystemAssignedIdentity == false), 'userassigned', 'systemassigned')
| project id, name, type, resourceGroup, vaultName, friendlyName, instanceName, subscriptionId, dataSourceType, protectionState, policyName, primaryLocation, lastRestorePoint, properties, dsResourceGroup, dsSubscription, location, parentType, managedIdentity, resourceId =
    case(
        type in~ (
            'microsoft.dataprotection/backupVaults/backupInstances',
            'microsoft.dataprotection/backupVaults/deletedBackupInstances'
        ), tolower(tostring(properties.dataSourceInfo.resourceID)),
        type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',
        tolower(tostring(properties.sourceResourceId)), '--')
| where isnotnull(resourceId) and isnotempty(resourceId)
| join kind = leftouter (
    resources
    | where type in~ (
        'microsoft.compute/virtualmachines',
        'microsoft.classiccompute/virtualmachines',
        'microsoft.compute/virtualmachines/extensions'
    )
    | extend resourceId = tolower(id), backupItemId = id
) on resourceId
| extend resourceExist = isnotempty(backupItemId)
| extend extendedLocationId = tolower(extendedLocation.name)
| extend extendedLocationName = split(extendedLocationId, "/customlocations/", 1)[0]
| extend ProtectedDatasource = properties
| where (resourceExist == (0))
| where (protectionState in~ (
    'ConfiguringProtection','ProtectionConfigured','ConfiguringProtectionFailed','ProtectionStopped',
    'BackupsSuspended','SoftDeleted','ProtectionError'
)) and (dataSourceType in~ ('AzureWorkload/SQLDataBase'))
| where subscriptionId in (
    "00000000-aaaa-bbbb-cccc-111111111111",
    "00000000-aaaa-bbbb-cccc-222222222222",
    "00000000-aaaa-bbbb-cccc-333333333333",
    "00000000-aaaa-bbbb-cccc-444444444444",
    "00000000-aaaa-bbbb-cccc-555555555555",
    "00000000-aaaa-bbbb-cccc-666666666666",
    "00000000-aaaa-bbbb-cccc-777777777777",
    "00000000-aaaa-bbbb-cccc-888888888888"
)
| extend subscriptionName = case(
    subscriptionId == "00000000-aaaa-bbbb-cccc-111111111111", "Subscription A",
    subscriptionId == "00000000-aaaa-bbbb-cccc-222222222222", "Subscription B",
    subscriptionId == "00000000-aaaa-bbbb-cccc-333333333333", "Subscription C",
    subscriptionId == "00000000-aaaa-bbbb-cccc-444444444444", "Subscription D",
    subscriptionId == "00000000-aaaa-bbbb-cccc-555555555555", "Subscription E",
    subscriptionId == "00000000-aaaa-bbbb-cccc-666666666666", "Subscription F",
    subscriptionId == "00000000-aaaa-bbbb-cccc-777777777777", "Subscription G",
    subscriptionId == "00000000-aaaa-bbbb-cccc-888888888888", "Subscription H",
    "Unknown"
)
| extend ResourceLink = strcat('https://portal.azure.com/#@', tenantId, '/resource', id)
| project
    ['Name'] = friendlyName,
    ['Location'] = primaryLocation,
    ['Resource Group'] = resourceGroup,
    ['Subscription Name'] = subscriptionName,
    ['Vault Name'] = vaultName,
    ['Last Restore Point'] = lastRestorePoint,
    ['Protection State'] = protectionState,
    ['Instance Name'] = instanceName,
    ['Resource Link'] = ResourceLink
